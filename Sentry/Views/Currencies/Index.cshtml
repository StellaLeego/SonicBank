@using Open.Facade.Money
@model Open.Core.IPaginatedList<Open.Facade.Money.CurrencyViewModel>
@{
    ViewData["Title"] = "Currencies";
}

<h2>@ViewData["Title"]</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-horizontal">
        <p>
            Find by: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    @{ var dummy = Model.FirstOrDefault();}
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortAlpha3"]">@Html.DisplayNameFor(model => dummy.IsoCurrencySymbol)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortAlpha2"]">@Html.DisplayNameFor(model => dummy.CurrencySymbol)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortName"]">@Html.DisplayNameFor(model => dummy.Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortValidFrom"]">@Html.DisplayNameFor(model => dummy.ValidFrom)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SortValidTo"]">@Html.DisplayNameFor(model => dummy.ValidTo)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.IsoCurrencySymbol)</td>
                <td>@Html.DisplayFor(modelItem => item.CurrencySymbol)</td>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.ValidFrom)</td>
                <td>@Html.DisplayFor(modelItem => item.ValidTo)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.IsoCurrencySymbol">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.IsoCurrencySymbol">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.IsoCurrencySymbol">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-page="@(Model.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-default @nextDisabled">
    Next
</a>